library(RODBC)
conn <- odbcConnect("rfi_meta_data")
query_file <- 'queries/apollo_mv.txt'
query <- readChar(query_file, file.info(query_file)$size)
apollo_mv <- sqlQuery(conn,query)
View(head(apollo_mv))
View(head(apollo_mv))
apollo_mv_campaign <- read.csv("C:/Users/john/Google Drive/R Directory/campaign_analysis/data/apollo_mv_campaign.csv")
View(apollo_mv_campaign)
# Lattice Examples
library(lattice)
attach(mtcars)
# create factors with value labels
gear.f<-factor(gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
cyl.f <-factor(cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
# kernel density plot
densityplot(~mpg,
main="Density Plot",
xlab="Miles per Gallon")
# kernel density plots by factor level
densityplot(~mpg|cyl.f,
main="Density Plot by Number of Cylinders",
xlab="Miles per Gallon")
# boxplots for each combination of two factors
bwplot(cyl.f~mpg|gear.f,
ylab="Cylinders", xlab="Miles per Gallon",
main="Mileage by Cylinders and Gears",
layout=(c(1,3))
# scatterplots for each combination of two factors
xyplot(mpg~wt|cyl.f*gear.f,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
network_by_campaign <- read.csv("C:/Users/john/Google Drive/R Directory/campaign_analysis/data/network_by_campaign.csv")
View(network_by_campaign)
# scatterplots for each combination of two factors
xyplot(mpg~wt|cyl.f*gear.f,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
# scatterplots for each combination of two factors
xyplot(mpg~wt|cyl.f*gear.f,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
# 3d scatterplot by factor level
cloud(mpg~wt*qsec|cyl.f,
main="3D Scatterplot by Cylinders")
# scatterplots for each combination of two factors
xyplot(mpg~wt|cyl.f*gear.f,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
# boxplots for each combination of two factors
bwplot(cyl.f~mpg|gear.f,
ylab="Cylinders", xlab="Miles per Gallon",
main="Mileage by Cylinders and Gears",
layout=(c(1,3))
# kernel density plots by factor level (alternate layout)
densityplot(~mpg|cyl.f,
main="Density Plot by Numer of Cylinders",
xlab="Miles per Gallon",
layout=c(1,3))
# kernel density plots by factor level (alternate layout)
densityplot(~mpg|cyl.f,
main="Density Plot by Numer of Cylinders",
xlab="Miles per Gallon",
layout=c(1,3))
library(lattice)
attach(mtcars)
# kernel density plots by factor level (alternate layout)
densityplot(~mpg|cyl.f,
main="Density Plot by Numer of Cylinders",
xlab="Miles per Gallon",
layout=c(1,3))
View(network_by_campaign)
# boxplots for each combination of two factors
bwplot(cyl.f~mpg|gear.f,
ylab="Cylinders", xlab="Miles per Gallon",
main="Mileage by Cylinders and Gears",
layout=(c(1,3))
# scatterplots for each combination of two factors
xyplot(mpg~wt|cyl.f*gear.f,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
# scatterplots for each combination of two factors
xyplot(mpg~wt|cyl.f*gear.f,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
# scatterplot matrix
splom(mtcars[c(1,3,4,5,6)],
main="MTCARS Data")
# dotplot for each combination of two factors
dotplot(cyl.f~mpg|gear.f,
main="Dotplot Plot by Number of Gears and Cylinders",
xlab="Miles Per Gallon")
# 3d scatterplot by factor level
cloud(mpg~wt*qsec|cyl.f,
main="3D Scatterplot by Cylinders")
# scatterplots for each combination of two factors
xyplot(mpg~wt|cyl.f*gear.f,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
# boxplots for each combination of two factors
bwplot(cyl.f~mpg|gear.f,
ylab="Cylinders", xlab="Miles per Gallon",
main="Mileage by Cylinders and Gears",
layout=(c(1,3))
# kernel density plots by factor level (alternate layout)
densityplot(~mpg|cyl.f,
main="Density Plot by Numer of Cylinders",
xlab="Miles per Gallon",
layout=c(1,3))
# scatterplots for each combination of two factors
xyplot(mpg~wt|cyl.f*gear.f,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
# scatterplots for each combination of two factors
xyplot(mpg~wt|cyl.f*gear.f,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
# scatterplots for each combination of two factors
xyplot(mpg~wt|cyl.f,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
network_by_campaign$ctr<-network_by_campaign$Clicks*network_by_campaign$Imps
View(network_by_campaign)
network_by_campaign$Imps<-as.numeric(network_by_campaign$Imps)
network_by_campaign$Clicks<-as.numeric(network_by_campaign$Clicks)
network_by_campaign$ctr<-network_by_campaign$Clicks*network_by_campaign$Imps
View(network_by_campaign)
network_by_campaign$ctr<-network_by_campaign$Clicks/network_by_campaign$Imps
View(network_by_campaign)
network_by_campaign$date<-ymd(network_by_campaign$Date)
library(lubridate)
network_by_campaign$date<-ymd(network_by_campaign$Date)
rm(network_by_campaign$Date)
drops<-network_by_campaign$Date
View(network_by_campaign)
View(network_by_campaign)
xyplot(ctr~date|CID,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
library(lattice)
attach(network_by_campaign)
# scatterplots for each combination of two factors
xyplot(ctr~date|CID,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
test<-sqldf('select * from network_by_campaign where Analyst = 'John Houghton')
test<-sqldf('select * from network_by_campaign where Analyst = "John Houghton")
''
'
test<-sqldf('select * from network_by_campaign where Analyst = "John Houghton" ')
test<-sqldf('select * from network_by_campaign where Analyst = John Houghton ')
library(sqldf)
test<-sqldf('select * from network_by_campaign where Analyst = John Houghton ')
ncol(network_by_campaign)
network_by_campaign<-network_by_campaign[,c(1:2,4:15)]
test<-sqldf('select * from network_by_campaign where Analyst = John Houghton ')
test<-sqldf('select * from network_by_campaign where Analyst = 'John Houghton' ')
test<-sqldf("select * from network_by_campaign where Analyst = 'John Houghton' ")
View(test)
library(lattice)
attach(test)
# scatterplots for each combination of two factors
xyplot(ctr~date|CID,
main="CTR by Campaign",
ylab="ctr", xlab="Date")
View(test)
test<-sqldf("select * from test where Advertiser = 'Coupons.com' ")
library(lattice)
attach(test)
# scatterplots for each combination of two factors
xyplot(ctr~date|CID,
main="CTR by Campaign",
ylab="ctr", xlab="Date")
library(lattice)
attach(test)
# scatterplots for each combination of two factors
xyplot(ctr~date|CID,
main="CTR by Campaign",
ylab="ctr", xlab="Date", ylim=(0,0.05))
# scatterplots for each combination of two factors
xyplot(ctr~date|CID,
main="CTR by Campaign",
ylab="ctr", xlab="Date", ylim=(0,0.05))
library(lattice)
attach(test)
# scatterplots for each combination of two factors
xyplot(ctr~date|CID,
main="CTR by Campaign",
ylab="ctr", xlab="Date", ylim=c(0,0.05))
library(lattice)
attach(test)
# scatterplots for each combination of two factors
xyplot(ctr~date|CID,
main="CTR by Campaign",
ylab="ctr", xlab="Date", ylim=c(0,0.005))
test<-sqldf("select * from network_by_campaign where Analyst = 'John Houghton' and Advertiser = 'Coupons.com' ")
library(lattice)
attach(test)
# scatterplots for each combination of two factors
xyplot(ctr~date|CID,
main="CTR by Campaign",
ylab="ctr", xlab="Date", ylim=c(0,0.005))
apollo_mv_campaign <- read.csv("C:/Users/john/Google Drive/R Directory/campaign_analysis/data/apollo_mv_campaign.csv")
network_by_campaign <- read.csv("C:/Users/john/Google Drive/R Directory/campaign_analysis/data/network_by_campaign.csv")
network_by_campaign$Imps<-as.numeric(network_by_campaign$Imps)
network_by_campaign$Clicks<-as.numeric(network_by_campaign$Clicks)
network_by_campaign$ctr<-network_by_campaign$Clicks/network_by_campaign$Imps
library(lubridate)
network_by_campaign$Date<-ymd(network_by_campaign$Date)
network_by_campaign<-network_by_campaign[,c(1:2,4:15)]
apollo_mv_campaign <- read.csv("C:/Users/john/Google Drive/R Directory/campaign_analysis/data/apollo_mv_campaign.csv")
network_by_campaign <- read.csv("C:/Users/john/Google Drive/R Directory/campaign_analysis/data/network_by_campaign.csv")
network_by_campaign$Imps<-as.numeric(network_by_campaign$Imps)
network_by_campaign$Clicks<-as.numeric(network_by_campaign$Clicks)
network_by_campaign$ctr<-network_by_campaign$Clicks/network_by_campaign$Imps
library(lubridate)
network_by_campaign$Date<-ymd(network_by_campaign$Date)
ncol(network_by_campaign)
View(network_by_campaign)
install.packages("devtools") # if not installed
devtools::install_github("tesseradata/datadr")
devtools::install_github("tesseradata/trelliscope")
library(housingData)
library(datadr)
devtools::install_github("hafen/housingData")
str(housing)
head(housing,20)
conn <- vdbConn("vdb", name = "tesseraTutorial")
conn <- vdbConn("vdb", name = "tesseraTutorial")
library(trelliscope)
install.packages("trelliscope")
install_github("tesseradata/datadr")
library(devtools)
install_github("tesseradata/datadr")
install_github("tesseradata/trelliscope")
storm_tactic_bid_stats <- read.csv("C:/Users/john/Google Drive/R Directory/campaign_analysis/data/storm_tactic_bid_stats.csv", stringsAsFactors=FALSE)
View(storm_tactic_bid_stats)
storm_tactic_bid_stats$date<-ymd(storm_tactic_bid_stats$date)
densityplot(~mpg,
main="Density Plot",
xlab="Miles per Gallon")
library(lattice)
attach(storm_tactic_bid_stats)
densityplot(~cpm_bid,
main="CPM Bid Distribution",
xlab="CPM Bid")
storm_tactic_bid_stats$cpm_bid<-as.integer(storm_tactic_bid_stats$cpm_bid)
summary(storm_tactic_bid_stats$cpm_bid)
hist(storm_tactic_bid_stats$cpm_bid)
library(lattice)
attach(storm_tactic_bid_stats)
densityplot(~cpm_bid,
main="CPM Bid Distribution",
xlab="CPM Bid")
View(storm_tactic_bid_stats)
storm_tactic_bid_stats <- read.csv("C:/Users/john/Google Drive/R Directory/campaign_analysis/data/storm_tactic_bid_stats.csv", stringsAsFactors=FALSE)
library(lubridate)
storm_tactic_bid_stats$date<-ymd(storm_tactic_bid_stats$date)
storm_tactic_bid_stats$cpm_bid<-as.numeric(storm_tactic_bid_stats$cpm_bid)
hist(storm_tactic_bid_stats$cpm_bid)
View(storm_tactic_bid_stats)
library(plyr)
?ddply
library(plyr)
install.packages("plyr")
library(plyr)
library(plyr)
?ddply
??ddply
library(dplyr)
library(plyr)
library(dplyr)
install.packages(c("boot", "car", "class", "cluster", "codetools", "dygraphs", "evaluate", "foreign", "formatR", "highr", "KernSmooth", "knitr", "lattice", "manipulate", "maptools", "markdown", "MASS", "Matrix", "mgcv", "nlme", "nnet", "quantmod", "RCurl", "rmarkdown", "RODBC", "roxygen2", "rpart", "rstudioapi", "sp", "spatial", "survival"))
library(dplyr)
library(plyr)
